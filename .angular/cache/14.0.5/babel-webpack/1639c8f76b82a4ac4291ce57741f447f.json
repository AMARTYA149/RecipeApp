{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isEmailValidator from 'validator/lib/isEmail';\nexport const IS_EMAIL = 'isEmail';\n/**\n * Checks if the string is an email.\n * If given value is not a string, then it returns false.\n */\n\nexport function isEmail(value, options) {\n  return typeof value === 'string' && isEmailValidator(value, options);\n}\n/**\n * Checks if the string is an email.\n * If given value is not a string, then it returns false.\n */\n\nexport function IsEmail(options, validationOptions) {\n  return ValidateBy({\n    name: IS_EMAIL,\n    constraints: [options],\n    validator: {\n      validate: (value, args) => isEmail(value, args.constraints[0]),\n      defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be an email', validationOptions)\n    }\n  }, validationOptions);\n} //# sourceMappingURL=IsEmail.js.map","map":null,"metadata":{},"sourceType":"module"}