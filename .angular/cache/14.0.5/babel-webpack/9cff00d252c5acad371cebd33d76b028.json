{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SetMetadata = void 0;\n/**\n * Decorator that assigns metadata to the class/function using the\n * specified `key`.\n *\n * Requires two parameters:\n * - `key` - a value defining the key under which the metadata is stored\n * - `value` - metadata to be associated with `key`\n *\n * This metadata can be reflected using the `Reflector` class.\n *\n * Example: `@SetMetadata('roles', ['admin'])`\n *\n * @see [Reflection](https://docs.nestjs.com/guards#reflection)\n *\n * @publicApi\n */\n\nconst SetMetadata = (metadataKey, metadataValue) => {\n  const decoratorFactory = (target, key, descriptor) => {\n    if (descriptor) {\n      Reflect.defineMetadata(metadataKey, metadataValue, descriptor.value);\n      return descriptor;\n    }\n\n    Reflect.defineMetadata(metadataKey, metadataValue, target);\n    return target;\n  };\n\n  decoratorFactory.KEY = metadataKey;\n  return decoratorFactory;\n};\n\nexports.SetMetadata = SetMetadata;","map":null,"metadata":{},"sourceType":"script"}