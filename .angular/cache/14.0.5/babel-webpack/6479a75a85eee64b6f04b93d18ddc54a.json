{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isNumericValidator from 'validator/lib/isNumeric';\nexport const IS_NUMBER_STRING = 'isNumberString';\n/**\n * Checks if the string is numeric.\n * If given value is not a string, then it returns false.\n */\n\nexport function isNumberString(value, options) {\n  return typeof value === 'string' && isNumericValidator(value, options);\n}\n/**\n * Checks if the string is numeric.\n * If given value is not a string, then it returns false.\n */\n\nexport function IsNumberString(options, validationOptions) {\n  return ValidateBy({\n    name: IS_NUMBER_STRING,\n    constraints: [options],\n    validator: {\n      validate: (value, args) => isNumberString(value, args.constraints[0]),\n      defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a number string', validationOptions)\n    }\n  }, validationOptions);\n} //# sourceMappingURL=IsNumberString.js.map","map":null,"metadata":{},"sourceType":"module"}