{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isCurrencyValidator from 'validator/lib/isCurrency';\nexport const IS_CURRENCY = 'isCurrency';\n/**\n * Checks if the string is a valid currency amount.\n * If given value is not a string, then it returns false.\n */\n\nexport function isCurrency(value, options) {\n  return typeof value === 'string' && isCurrencyValidator(value, options);\n}\n/**\n * Checks if the string is a valid currency amount.\n * If given value is not a string, then it returns false.\n */\n\nexport function IsCurrency(options, validationOptions) {\n  return ValidateBy({\n    name: IS_CURRENCY,\n    constraints: [options],\n    validator: {\n      validate: (value, args) => isCurrency(value, args.constraints[0]),\n      defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a currency', validationOptions)\n    }\n  }, validationOptions);\n} //# sourceMappingURL=IsCurrency.js.map","map":null,"metadata":{},"sourceType":"module"}