{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isDivisibleByValidator from 'validator/lib/isDivisibleBy';\nexport const IS_DIVISIBLE_BY = 'isDivisibleBy';\n/**\n * Checks if value is a number that's divisible by another.\n */\n\nexport function isDivisibleBy(value, num) {\n  return typeof value === 'number' && typeof num === 'number' && isDivisibleByValidator(String(value), num);\n}\n/**\n * Checks if value is a number that's divisible by another.\n */\n\nexport function IsDivisibleBy(num, validationOptions) {\n  return ValidateBy({\n    name: IS_DIVISIBLE_BY,\n    constraints: [num],\n    validator: {\n      validate: (value, args) => isDivisibleBy(value, args.constraints[0]),\n      defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be divisible by $constraint1', validationOptions)\n    }\n  }, validationOptions);\n} //# sourceMappingURL=IsDivisibleBy.js.map","map":null,"metadata":{},"sourceType":"module"}