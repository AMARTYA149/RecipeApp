{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Catch = void 0;\n\nconst constants_1 = require(\"../../constants\");\n/**\n * Decorator that marks a class as a Nest exception filter. An exception filter\n * handles exceptions thrown by or not handled by your application code.\n *\n * The decorated class must implement the `ExceptionFilter` interface.\n *\n * @param exceptions one or more exception *types* specifying\n * the exceptions to be caught and handled by this filter.\n *\n * @see [Exception Filters](https://docs.nestjs.com/exception-filters)\n *\n * @usageNotes\n * Exception filters are applied using the `@UseFilters()` decorator, or (globally)\n * with `app.useGlobalFilters()`.\n *\n * @publicApi\n */\n\n\nfunction Catch(...exceptions) {\n  return target => {\n    Reflect.defineMetadata(constants_1.CATCH_WATERMARK, true, target);\n    Reflect.defineMetadata(constants_1.FILTER_CATCH_EXCEPTIONS, exceptions, target);\n  };\n}\n\nexports.Catch = Catch;","map":null,"metadata":{},"sourceType":"script"}