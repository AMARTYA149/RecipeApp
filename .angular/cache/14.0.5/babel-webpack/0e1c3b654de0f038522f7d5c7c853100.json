{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport const IS_INSTANCE = 'isInstance';\n/**\n * Checks if the value is an instance of the specified object.\n */\n\nexport function isInstance(object, targetTypeConstructor) {\n  return targetTypeConstructor && typeof targetTypeConstructor === 'function' && object instanceof targetTypeConstructor;\n}\n/**\n * Checks if the value is an instance of the specified object.\n */\n\nexport function IsInstance(targetType, validationOptions) {\n  return ValidateBy({\n    name: IS_INSTANCE,\n    constraints: [targetType],\n    validator: {\n      validate: (value, args) => isInstance(value, args.constraints[0]),\n      defaultMessage: buildMessage((eachPrefix, args) => {\n        if (args.constraints[0]) {\n          return eachPrefix + `$property must be an instance of ${args.constraints[0].name}`;\n        } else {\n          return eachPrefix + `${IS_INSTANCE} decorator expects and object as value, but got falsy value.`;\n        }\n      }, validationOptions)\n    }\n  }, validationOptions);\n} //# sourceMappingURL=IsInstance.js.map","map":null,"metadata":{},"sourceType":"module"}