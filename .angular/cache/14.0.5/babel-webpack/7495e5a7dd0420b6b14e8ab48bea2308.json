{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isIPValidator from 'validator/lib/isIP';\nexport const IS_IP = 'isIp';\n/**\n * Checks if the string is an IP (version 4 or 6).\n * If given value is not a string, then it returns false.\n */\n\nexport function isIP(value, version) {\n  /* eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion */\n  const versionStr = version ? `${version}` : undefined;\n  return typeof value === 'string' && isIPValidator(value, versionStr);\n}\n/**\n * Checks if the string is an IP (version 4 or 6).\n * If given value is not a string, then it returns false.\n */\n\nexport function IsIP(version, validationOptions) {\n  return ValidateBy({\n    name: IS_IP,\n    constraints: [version],\n    validator: {\n      validate: (value, args) => isIP(value, args.constraints[0]),\n      defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be an ip address', validationOptions)\n    }\n  }, validationOptions);\n} //# sourceMappingURL=IsIP.js.map","map":null,"metadata":{},"sourceType":"module"}