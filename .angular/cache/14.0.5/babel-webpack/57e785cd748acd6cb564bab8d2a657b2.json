{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ModuleTokenFactory = void 0;\n\nconst random_string_generator_util_1 = require(\"@nestjs/common/utils/random-string-generator.util\");\n\nconst shared_utils_1 = require(\"@nestjs/common/utils/shared.utils\");\n\nconst fast_safe_stringify_1 = require(\"fast-safe-stringify\");\n\nconst hash = require(\"object-hash\");\n\nclass ModuleTokenFactory {\n  constructor() {\n    this.moduleIdsCache = new WeakMap();\n  }\n\n  create(metatype, dynamicModuleMetadata) {\n    const moduleId = this.getModuleId(metatype);\n    const opaqueToken = {\n      id: moduleId,\n      module: this.getModuleName(metatype),\n      dynamic: this.getDynamicMetadataToken(dynamicModuleMetadata)\n    };\n    return hash(opaqueToken, {\n      ignoreUnknown: true\n    });\n  }\n\n  getDynamicMetadataToken(dynamicModuleMetadata) {\n    // Uses safeStringify instead of JSON.stringify to support circular dynamic modules\n    // The replacer function is also required in order to obtain real class names\n    // instead of the unified \"Function\" key\n    return dynamicModuleMetadata ? (0, fast_safe_stringify_1.default)(dynamicModuleMetadata, this.replacer) : '';\n  }\n\n  getModuleId(metatype) {\n    let moduleId = this.moduleIdsCache.get(metatype);\n\n    if (moduleId) {\n      return moduleId;\n    }\n\n    moduleId = (0, random_string_generator_util_1.randomStringGenerator)();\n    this.moduleIdsCache.set(metatype, moduleId);\n    return moduleId;\n  }\n\n  getModuleName(metatype) {\n    return metatype.name;\n  }\n\n  replacer(key, value) {\n    if ((0, shared_utils_1.isFunction)(value)) {\n      const funcAsString = value.toString();\n      const isClass = /^class\\s/.test(funcAsString);\n\n      if (isClass) {\n        return value.name;\n      }\n\n      return hash(funcAsString, {\n        ignoreUnknown: true\n      });\n    }\n\n    if ((0, shared_utils_1.isSymbol)(value)) {\n      return value.toString();\n    }\n\n    return value;\n  }\n\n}\n\nexports.ModuleTokenFactory = ModuleTokenFactory;","map":null,"metadata":{},"sourceType":"script"}