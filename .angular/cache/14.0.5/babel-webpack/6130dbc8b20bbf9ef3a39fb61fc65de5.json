{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport const IS_IN = 'isIn';\n/**\n * Checks if given value is in a array of allowed values.\n */\n\nexport function isIn(value, possibleValues) {\n  return !Array.isArray(possibleValues) || possibleValues.some(possibleValue => possibleValue === value);\n}\n/**\n * Checks if given value is in a array of allowed values.\n */\n\nexport function IsIn(values, validationOptions) {\n  return ValidateBy({\n    name: IS_IN,\n    constraints: [values],\n    validator: {\n      validate: (value, args) => isIn(value, args.constraints[0]),\n      defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be one of the following values: $constraint1', validationOptions)\n    }\n  }, validationOptions);\n} //# sourceMappingURL=IsIn.js.map","map":null,"metadata":{},"sourceType":"module"}