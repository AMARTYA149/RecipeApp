{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isIso8601Validator from 'validator/lib/isISO8601';\nexport const IS_ISO8601 = 'isIso8601';\n/**\n * Checks if the string is a valid ISO 8601 date.\n * If given value is not a string, then it returns false.\n * Use the option strict = true for additional checks for a valid date, e.g. invalidates dates like 2019-02-29.\n */\n\nexport function isISO8601(value, options) {\n  return typeof value === 'string' && isIso8601Validator(value, options);\n}\n/**\n * Checks if the string is a valid ISO 8601 date.\n * If given value is not a string, then it returns false.\n * Use the option strict = true for additional checks for a valid date, e.g. invalidates dates like 2019-02-29.\n */\n\nexport function IsISO8601(options, validationOptions) {\n  return ValidateBy({\n    name: IS_ISO8601,\n    constraints: [options],\n    validator: {\n      validate: (value, args) => isISO8601(value, args.constraints[0]),\n      defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a valid ISO 8601 date string', validationOptions)\n    }\n  }, validationOptions);\n} //# sourceMappingURL=IsISO8601.js.map","map":null,"metadata":{},"sourceType":"module"}