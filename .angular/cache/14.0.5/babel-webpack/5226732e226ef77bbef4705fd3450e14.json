{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport containsValidator from 'validator/lib/contains';\nexport const CONTAINS = 'contains';\n/**\n * Checks if the string contains the seed.\n * If given value is not a string, then it returns false.\n */\n\nexport function contains(value, seed) {\n  return typeof value === 'string' && containsValidator(value, seed);\n}\n/**\n * Checks if the string contains the seed.\n * If given value is not a string, then it returns false.\n */\n\nexport function Contains(seed, validationOptions) {\n  return ValidateBy({\n    name: CONTAINS,\n    constraints: [seed],\n    validator: {\n      validate: (value, args) => contains(value, args.constraints[0]),\n      defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must contain a $constraint1 string', validationOptions)\n    }\n  }, validationOptions);\n} //# sourceMappingURL=Contains.js.map","map":null,"metadata":{},"sourceType":"module"}