{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createParamDecorator = void 0;\n\nconst uuid_1 = require(\"uuid\");\n\nconst constants_1 = require(\"../../constants\");\n\nconst assign_custom_metadata_util_1 = require(\"../../utils/assign-custom-metadata.util\");\n\nconst shared_utils_1 = require(\"../../utils/shared.utils\");\n/**\n * Defines HTTP route param decorator\n *\n * @param factory\n */\n\n\nfunction createParamDecorator(factory, enhancers = []) {\n  const paramtype = (0, uuid_1.v4)();\n  return (data, ...pipes) => (target, key, index) => {\n    const args = Reflect.getMetadata(constants_1.ROUTE_ARGS_METADATA, target.constructor, key) || {};\n\n    const isPipe = pipe => pipe && ((0, shared_utils_1.isFunction)(pipe) && pipe.prototype && (0, shared_utils_1.isFunction)(pipe.prototype.transform) || (0, shared_utils_1.isFunction)(pipe.transform));\n\n    const hasParamData = (0, shared_utils_1.isNil)(data) || !isPipe(data);\n    const paramData = hasParamData ? data : undefined;\n    const paramPipes = hasParamData ? pipes : [data, ...pipes];\n    Reflect.defineMetadata(constants_1.ROUTE_ARGS_METADATA, (0, assign_custom_metadata_util_1.assignCustomParameterMetadata)(args, paramtype, index, factory, paramData, ...paramPipes), target.constructor, key);\n    enhancers.forEach(fn => fn(target, key, index));\n  };\n}\n\nexports.createParamDecorator = createParamDecorator;","map":null,"metadata":{},"sourceType":"script"}