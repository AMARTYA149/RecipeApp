{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isAlphanumericValidator from 'validator/lib/isAlphanumeric';\nexport const IS_ALPHANUMERIC = 'isAlphanumeric';\n/**\n * Checks if the string contains only letters and numbers.\n * If given value is not a string, then it returns false.\n */\n\nexport function isAlphanumeric(value, locale) {\n  return typeof value === 'string' && isAlphanumericValidator(value, locale);\n}\n/**\n * Checks if the string contains only letters and numbers.\n * If given value is not a string, then it returns false.\n */\n\nexport function IsAlphanumeric(locale, validationOptions) {\n  return ValidateBy({\n    name: IS_ALPHANUMERIC,\n    constraints: [locale],\n    validator: {\n      validate: (value, args) => isAlphanumeric(value, args.constraints[0]),\n      defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must contain only letters and numbers', validationOptions)\n    }\n  }, validationOptions);\n} //# sourceMappingURL=IsAlphanumeric.js.map","map":null,"metadata":{},"sourceType":"module"}