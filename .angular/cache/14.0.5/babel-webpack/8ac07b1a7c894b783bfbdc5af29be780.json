{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isSurrogatePairValidator from 'validator/lib/isSurrogatePair';\nexport const IS_SURROGATE_PAIR = 'isSurrogatePair';\n/**\n * Checks if the string contains any surrogate pairs chars.\n * If given value is not a string, then it returns false.\n */\n\nexport function isSurrogatePair(value) {\n  return typeof value === 'string' && isSurrogatePairValidator(value);\n}\n/**\n * Checks if the string contains any surrogate pairs chars.\n * If given value is not a string, then it returns false.\n */\n\nexport function IsSurrogatePair(validationOptions) {\n  return ValidateBy({\n    name: IS_SURROGATE_PAIR,\n    validator: {\n      validate: (value, args) => isSurrogatePair(value),\n      defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must contain any surrogate pairs chars', validationOptions)\n    }\n  }, validationOptions);\n} //# sourceMappingURL=IsSurrogatePair.js.map","map":null,"metadata":{},"sourceType":"module"}