{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MiddlewareBuilder = void 0;\n\nconst dependencies_decorator_1 = require(\"@nestjs/common/decorators/core/dependencies.decorator\");\n\nconst iterare_1 = require(\"iterare\");\n\nconst utils_1 = require(\"./utils\");\n\nclass MiddlewareBuilder {\n  constructor(routesMapper, httpAdapter) {\n    this.routesMapper = routesMapper;\n    this.httpAdapter = httpAdapter;\n    this.middlewareCollection = new Set();\n  }\n\n  apply(...middleware) {\n    return new MiddlewareBuilder.ConfigProxy(this, (0, dependencies_decorator_1.flatten)(middleware));\n  }\n\n  build() {\n    return [...this.middlewareCollection];\n  }\n\n  getHttpAdapter() {\n    return this.httpAdapter;\n  }\n\n}\n\nexports.MiddlewareBuilder = MiddlewareBuilder;\nMiddlewareBuilder.ConfigProxy = class {\n  constructor(builder, middleware) {\n    this.builder = builder;\n    this.middleware = middleware;\n    this.excludedRoutes = [];\n  }\n\n  getExcludedRoutes() {\n    return this.excludedRoutes;\n  }\n\n  exclude(...routes) {\n    this.excludedRoutes = this.getRoutesFlatList(routes);\n    return this;\n  }\n\n  forRoutes(...routes) {\n    const {\n      middlewareCollection\n    } = this.builder;\n    const forRoutes = this.getRoutesFlatList(routes);\n    const configuration = {\n      middleware: (0, utils_1.filterMiddleware)(this.middleware, this.excludedRoutes, this.builder.getHttpAdapter()),\n      forRoutes\n    };\n    middlewareCollection.add(configuration);\n    return this.builder;\n  }\n\n  getRoutesFlatList(routes) {\n    const {\n      routesMapper\n    } = this.builder;\n    return (0, iterare_1.iterate)(routes).map(route => routesMapper.mapRouteToRouteInfo(route)).flatten().toArray();\n  }\n\n};","map":null,"metadata":{},"sourceType":"script"}