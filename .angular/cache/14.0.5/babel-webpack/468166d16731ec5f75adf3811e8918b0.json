{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isDecimalValidator from 'validator/lib/isDecimal';\nexport const IS_DECIMAL = 'isDecimal';\n/**\n * Checks if the string is a valid decimal.\n * If given value is not a string, then it returns false.\n */\n\nexport function isDecimal(value, options) {\n  return typeof value === 'string' && isDecimalValidator(value, options);\n}\n/**\n * Checks if the string contains only letters and numbers.\n * If given value is not a string, then it returns false.\n */\n\nexport function IsDecimal(options, validationOptions) {\n  return ValidateBy({\n    name: IS_DECIMAL,\n    constraints: [options],\n    validator: {\n      validate: (value, args) => isDecimal(value, args.constraints[0]),\n      defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property is not a valid decimal number.', validationOptions)\n    }\n  }, validationOptions);\n} //# sourceMappingURL=IsDecimal.js.map","map":null,"metadata":{},"sourceType":"module"}