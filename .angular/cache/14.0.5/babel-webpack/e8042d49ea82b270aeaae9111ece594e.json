{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport matchesValidator from 'validator/lib/matches';\nexport const MATCHES = 'matches';\nexport function matches(value, pattern, modifiers) {\n  return typeof value === 'string' && matchesValidator(value, pattern, modifiers);\n}\nexport function Matches(pattern, modifiersOrAnnotationOptions, validationOptions) {\n  let modifiers;\n\n  if (modifiersOrAnnotationOptions && modifiersOrAnnotationOptions instanceof Object && !validationOptions) {\n    validationOptions = modifiersOrAnnotationOptions;\n  } else {\n    modifiers = modifiersOrAnnotationOptions;\n  }\n\n  return ValidateBy({\n    name: MATCHES,\n    constraints: [pattern, modifiers],\n    validator: {\n      validate: (value, args) => matches(value, args.constraints[0], args.constraints[1]),\n      defaultMessage: buildMessage((eachPrefix, args) => eachPrefix + '$property must match $constraint1 regular expression', validationOptions)\n    }\n  }, validationOptions);\n} //# sourceMappingURL=Matches.js.map","map":null,"metadata":{},"sourceType":"module"}