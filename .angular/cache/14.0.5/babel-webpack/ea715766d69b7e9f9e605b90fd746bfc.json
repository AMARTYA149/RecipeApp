{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isBase32Validator from 'validator/lib/isBase32';\nexport const IS_BASE32 = 'isBase32';\n/**\n * Checks if a string is base32 encoded.\n * If given value is not a string, then it returns false.\n */\n\nexport function isBase32(value) {\n  return typeof value === 'string' && isBase32Validator(value);\n}\n/**\n * Check if a string is base32 encoded.\n * If given value is not a string, then it returns false.\n */\n\nexport function IsBase32(validationOptions) {\n  return ValidateBy({\n    name: IS_BASE32,\n    validator: {\n      validate: (value, args) => isBase32(value),\n      defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be base32 encoded', validationOptions)\n    }\n  }, validationOptions);\n} //# sourceMappingURL=IsBase32.js.map","map":null,"metadata":{},"sourceType":"module"}