{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.applyDecorators = void 0;\n/**\n * Function that returns a new decorator that applies all decorators provided by param\n *\n * Useful to build new decorators (or a decorator factory) encapsulating multiple decorators related with the same feature\n *\n * @param decorators one or more decorators (e.g., `ApplyGuard(...)`)\n *\n * @publicApi\n */\n\nfunction applyDecorators(...decorators) {\n  return (target, propertyKey, descriptor) => {\n    for (const decorator of decorators) {\n      if (target instanceof Function && !descriptor) {\n        decorator(target);\n        continue;\n      }\n\n      decorator(target, propertyKey, descriptor);\n    }\n  };\n}\n\nexports.applyDecorators = applyDecorators;","map":null,"metadata":{},"sourceType":"script"}