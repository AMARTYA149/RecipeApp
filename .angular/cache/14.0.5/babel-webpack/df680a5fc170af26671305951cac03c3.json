{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"/Users/amartya_aishwarya/Desktop/nextjs-angular/RecipeApp/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ParseEnumPipe = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst index_1 = require(\"../index\");\n\nconst http_error_by_code_util_1 = require(\"../utils/http-error-by-code.util\");\n/**\n * Defines the built-in ParseEnum Pipe\n *\n * @see [Built-in Pipes](https://docs.nestjs.com/pipes#built-in-pipes)\n *\n * @publicApi\n */\n\n\nlet ParseEnumPipe = class ParseEnumPipe {\n  constructor(enumType, options) {\n    this.enumType = enumType;\n\n    if (!enumType) {\n      throw new Error(`\"ParseEnumPipe\" requires \"enumType\" argument specified (to validate input values).`);\n    }\n\n    options = options || {};\n    const {\n      exceptionFactory,\n      errorHttpStatusCode = index_1.HttpStatus.BAD_REQUEST\n    } = options;\n\n    this.exceptionFactory = exceptionFactory || (error => new http_error_by_code_util_1.HttpErrorByCode[errorHttpStatusCode](error));\n  }\n  /**\n   * Method that accesses and performs optional transformation on argument for\n   * in-flight requests.\n   *\n   * @param value currently processed route argument\n   * @param metadata contains metadata about the currently processed route argument\n   */\n\n\n  transform(value, metadata) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (!_this.isEnum(value)) {\n        throw _this.exceptionFactory('Validation failed (enum string is expected)');\n      }\n\n      return value;\n    })();\n  }\n\n  isEnum(value) {\n    const enumValues = Object.keys(this.enumType).map(item => this.enumType[item]);\n    return enumValues.includes(value);\n  }\n\n};\nParseEnumPipe = tslib_1.__decorate([(0, index_1.Injectable)(), tslib_1.__param(1, (0, index_1.Optional)()), tslib_1.__metadata(\"design:paramtypes\", [Object, Object])], ParseEnumPipe);\nexports.ParseEnumPipe = ParseEnumPipe;","map":null,"metadata":{},"sourceType":"script"}