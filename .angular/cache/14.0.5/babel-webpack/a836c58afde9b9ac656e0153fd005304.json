{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DiscoveryService = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst common_1 = require(\"@nestjs/common\");\n\nconst modules_container_1 = require(\"../injector/modules-container\");\n/**\n * @publicApi\n */\n\n\nlet DiscoveryService = class DiscoveryService {\n  constructor(modulesContainer) {\n    this.modulesContainer = modulesContainer;\n  }\n\n  getProviders(options = {}, modules = this.getModules(options)) {\n    const providers = modules.map(item => [...item.providers.values()]);\n    return (0, common_1.flatten)(providers);\n  }\n\n  getControllers(options = {}, modules = this.getModules(options)) {\n    const controllers = modules.map(item => [...item.controllers.values()]);\n    return (0, common_1.flatten)(controllers);\n  }\n\n  getModules(options = {}) {\n    if (!options.include) {\n      const moduleRefs = [...this.modulesContainer.values()];\n      return moduleRefs;\n    }\n\n    const whitelisted = this.includeWhitelisted(options.include);\n    return whitelisted;\n  }\n\n  includeWhitelisted(include) {\n    const moduleRefs = [...this.modulesContainer.values()];\n    return moduleRefs.filter(({\n      metatype\n    }) => include.some(item => item === metatype));\n  }\n\n};\nDiscoveryService = tslib_1.__decorate([(0, common_1.Injectable)(), tslib_1.__metadata(\"design:paramtypes\", [modules_container_1.ModulesContainer])], DiscoveryService);\nexports.DiscoveryService = DiscoveryService;","map":null,"metadata":{},"sourceType":"script"}