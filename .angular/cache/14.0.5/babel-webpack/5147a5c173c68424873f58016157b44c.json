{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Optional = void 0;\n\nconst constants_1 = require(\"../../constants\");\n\nconst shared_utils_1 = require(\"../../utils/shared.utils\");\n/**\n * Parameter decorator for an injected dependency marking the\n * dependency as optional.\n *\n * For example:\n * ```typescript\n * constructor(@Optional() @Inject('HTTP_OPTIONS')private readonly httpClient: T) {}\n * ```\n *\n * @see [Optional providers](https://docs.nestjs.com/providers#optional-providers)\n *\n * @publicApi\n */\n\n\nfunction Optional() {\n  return (target, key, index) => {\n    if (!(0, shared_utils_1.isUndefined)(index)) {\n      const args = Reflect.getMetadata(constants_1.OPTIONAL_DEPS_METADATA, target) || [];\n      Reflect.defineMetadata(constants_1.OPTIONAL_DEPS_METADATA, [...args, index], target);\n      return;\n    }\n\n    const properties = Reflect.getMetadata(constants_1.OPTIONAL_PROPERTY_DEPS_METADATA, target.constructor) || [];\n    Reflect.defineMetadata(constants_1.OPTIONAL_PROPERTY_DEPS_METADATA, [...properties, key], target.constructor);\n  };\n}\n\nexports.Optional = Optional;","map":null,"metadata":{},"sourceType":"script"}