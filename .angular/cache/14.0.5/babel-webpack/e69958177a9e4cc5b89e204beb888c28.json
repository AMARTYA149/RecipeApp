{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isHexadecimalValidator from 'validator/lib/isHexadecimal';\nexport const IS_HEXADECIMAL = 'isHexadecimal';\n/**\n * Checks if the string is a hexadecimal number.\n * If given value is not a string, then it returns false.\n */\n\nexport function isHexadecimal(value) {\n  return typeof value === 'string' && isHexadecimalValidator(value);\n}\n/**\n * Checks if the string is a hexadecimal number.\n * If given value is not a string, then it returns false.\n */\n\nexport function IsHexadecimal(validationOptions) {\n  return ValidateBy({\n    name: IS_HEXADECIMAL,\n    validator: {\n      validate: (value, args) => isHexadecimal(value),\n      defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a hexadecimal number', validationOptions)\n    }\n  }, validationOptions);\n} //# sourceMappingURL=IsHexadecimal.js.map","map":null,"metadata":{},"sourceType":"module"}