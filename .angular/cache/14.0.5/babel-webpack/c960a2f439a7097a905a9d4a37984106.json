{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MetadataScanner = void 0;\n\nconst shared_utils_1 = require(\"@nestjs/common/utils/shared.utils\");\n\nconst iterare_1 = require(\"iterare\");\n\nclass MetadataScanner {\n  scanFromPrototype(instance, prototype, callback) {\n    const methodNames = new Set(this.getAllFilteredMethodNames(prototype));\n    return (0, iterare_1.iterate)(methodNames).map(callback).filter(metadata => !(0, shared_utils_1.isNil)(metadata)).toArray();\n  }\n\n  *getAllFilteredMethodNames(prototype) {\n    const isMethod = prop => {\n      const descriptor = Object.getOwnPropertyDescriptor(prototype, prop);\n\n      if (descriptor.set || descriptor.get) {\n        return false;\n      }\n\n      return !(0, shared_utils_1.isConstructor)(prop) && (0, shared_utils_1.isFunction)(prototype[prop]);\n    };\n\n    do {\n      yield* (0, iterare_1.iterate)(Object.getOwnPropertyNames(prototype)).filter(isMethod).toArray();\n    } while ((prototype = Reflect.getPrototypeOf(prototype)) && prototype !== Object.prototype);\n  }\n\n}\n\nexports.MetadataScanner = MetadataScanner;","map":null,"metadata":{},"sourceType":"script"}