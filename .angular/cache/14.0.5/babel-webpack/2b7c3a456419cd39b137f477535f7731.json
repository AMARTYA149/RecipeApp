{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mixin = exports.Injectable = void 0;\n\nconst uuid_1 = require(\"uuid\");\n\nconst constants_1 = require(\"../../constants\");\n/**\n * Decorator that marks a class as a [provider](https://docs.nestjs.com/providers).\n * Providers can be injected into other classes via constructor parameter injection\n * using Nest's built-in [Dependency Injection (DI)](https://docs.nestjs.com/providers#dependency-injection)\n * system.\n *\n * When injecting a provider, it must be visible within the module scope (loosely\n * speaking, the containing module) of the class it is being injected into. This\n * can be done by:\n *\n * - defining the provider in the same module scope\n * - exporting the provider from one module scope and importing that module into the\n *   module scope of the class being injected into\n * - exporting the provider from a module that is marked as global using the\n *   `@Global()` decorator\n *\n * Providers can also be defined in a more explicit and imperative form using\n * various [custom provider](https://docs.nestjs.com/fundamentals/custom-providers) techniques that expose\n * more capabilities of the DI system.\n *\n * @param options options specifying scope of injectable\n *\n * @see [Providers](https://docs.nestjs.com/providers)\n * @see [Custom Providers](https://docs.nestjs.com/fundamentals/custom-providers)\n * @see [Injection Scopes](https://docs.nestjs.com/fundamentals/injection-scopes)\n *\n * @publicApi\n */\n\n\nfunction Injectable(options) {\n  return target => {\n    Reflect.defineMetadata(constants_1.INJECTABLE_WATERMARK, true, target);\n    Reflect.defineMetadata(constants_1.SCOPE_OPTIONS_METADATA, options, target);\n  };\n}\n\nexports.Injectable = Injectable;\n\nfunction mixin(mixinClass) {\n  Object.defineProperty(mixinClass, 'name', {\n    value: (0, uuid_1.v4)()\n  });\n  Injectable()(mixinClass);\n  return mixinClass;\n}\n\nexports.mixin = mixin;","map":null,"metadata":{},"sourceType":"script"}