{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isPassportNumberValidator from 'validator/lib/isPassportNumber';\nexport const IS_PASSPORT_NUMBER = 'isPassportNumber';\n/**\n * Check if the string is a valid passport number relative to a specific country code.\n * If given value is not a string, then it returns false.\n */\n\nexport function isPassportNumber(value, countryCode) {\n  return typeof value === 'string' && isPassportNumberValidator(value, countryCode);\n}\n/**\n * Check if the string is a valid passport number relative to a specific country code.\n * If given value is not a string, then it returns false.\n */\n\nexport function IsPassportNumber(countryCode, validationOptions) {\n  return ValidateBy({\n    name: IS_PASSPORT_NUMBER,\n    constraints: [countryCode],\n    validator: {\n      validate: (value, args) => isPassportNumber(value, args.constraints[0]),\n      defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be valid passport number', validationOptions)\n    }\n  }, validationOptions);\n} //# sourceMappingURL=IsPassportNumber.js.map","map":null,"metadata":{},"sourceType":"module"}