{"ast":null,"code":"import { ValidationTypes } from '../../validation/ValidationTypes';\nimport { ValidationMetadata } from '../../metadata/ValidationMetadata';\nimport { getMetadataStorage } from '../../metadata/MetadataStorage';\n/**\n * Checks if value is missing and if so, ignores all validators.\n */\n\nexport function IsOptional(validationOptions) {\n  return function (object, propertyName) {\n    const args = {\n      type: ValidationTypes.CONDITIONAL_VALIDATION,\n      target: object.constructor,\n      propertyName: propertyName,\n      constraints: [(object, value) => {\n        return object[propertyName] !== null && object[propertyName] !== undefined;\n      }],\n      validationOptions: validationOptions\n    };\n    getMetadataStorage().addValidationMetadata(new ValidationMetadata(args));\n  };\n} //# sourceMappingURL=IsOptional.js.map","map":null,"metadata":{},"sourceType":"module"}