{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isAlphaValidator from 'validator/lib/isAlpha';\nexport const IS_ALPHA = 'isAlpha';\n/**\n * Checks if the string contains only letters (a-zA-Z).\n * If given value is not a string, then it returns false.\n */\n\nexport function isAlpha(value, locale) {\n  return typeof value === 'string' && isAlphaValidator(value, locale);\n}\n/**\n * Checks if the string contains only letters (a-zA-Z).\n * If given value is not a string, then it returns false.\n */\n\nexport function IsAlpha(locale, validationOptions) {\n  return ValidateBy({\n    name: IS_ALPHA,\n    constraints: [locale],\n    validator: {\n      validate: (value, args) => isAlpha(value, args.constraints[0]),\n      defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must contain only letters (a-zA-Z)', validationOptions)\n    }\n  }, validationOptions);\n} //# sourceMappingURL=IsAlpha.js.map","map":null,"metadata":{},"sourceType":"module"}