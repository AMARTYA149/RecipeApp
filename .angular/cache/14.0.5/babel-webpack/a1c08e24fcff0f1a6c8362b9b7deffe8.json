{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isHSLValidator from 'validator/lib/isHSL';\nexport const IS_HSL = 'isHSL';\n/**\n * Check if the string is an HSL (hue, saturation, lightness, optional alpha) color based on CSS Colors Level 4 specification.\n * Comma-separated format supported. Space-separated format supported with the exception of a few edge cases (ex: hsl(200grad+.1%62%/1)).\n * If given value is not a string, then it returns false.\n */\n\nexport function isHSL(value) {\n  return typeof value === 'string' && isHSLValidator(value);\n}\n/**\n * Check if the string is an HSL (hue, saturation, lightness, optional alpha) color based on CSS Colors Level 4 specification.\n * Comma-separated format supported. Space-separated format supported with the exception of a few edge cases (ex: hsl(200grad+.1%62%/1)).\n * If given value is not a string, then it returns false.\n */\n\nexport function IsHSL(validationOptions) {\n  return ValidateBy({\n    name: IS_HSL,\n    validator: {\n      validate: (value, args) => isHSL(value),\n      defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a HSL color', validationOptions)\n    }\n  }, validationOptions);\n} //# sourceMappingURL=IsHSL.js.map","map":null,"metadata":{},"sourceType":"module"}