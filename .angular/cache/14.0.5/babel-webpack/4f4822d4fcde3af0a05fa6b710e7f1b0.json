{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isAsciiValidator from 'validator/lib/isAscii';\nexport const IS_ASCII = 'isAscii';\n/**\n * Checks if the string contains ASCII chars only.\n * If given value is not a string, then it returns false.\n */\n\nexport function isAscii(value) {\n  return typeof value === 'string' && isAsciiValidator(value);\n}\n/**\n * Checks if the string contains ASCII chars only.\n * If given value is not a string, then it returns false.\n */\n\nexport function IsAscii(validationOptions) {\n  return ValidateBy({\n    name: IS_ASCII,\n    validator: {\n      validate: (value, args) => isAscii(value),\n      defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must contain only ASCII characters', validationOptions)\n    }\n  }, validationOptions);\n} //# sourceMappingURL=IsAscii.js.map","map":null,"metadata":{},"sourceType":"module"}