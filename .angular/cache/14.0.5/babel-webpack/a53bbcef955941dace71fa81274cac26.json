{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isVariableWidthValidator from 'validator/lib/isVariableWidth';\nexport const IS_VARIABLE_WIDTH = 'isVariableWidth';\n/**\n * Checks if the string contains variable-width chars.\n * If given value is not a string, then it returns false.\n */\n\nexport function isVariableWidth(value) {\n  return typeof value === 'string' && isVariableWidthValidator(value);\n}\n/**\n * Checks if the string contains variable-width chars.\n * If given value is not a string, then it returns false.\n */\n\nexport function IsVariableWidth(validationOptions) {\n  return ValidateBy({\n    name: IS_VARIABLE_WIDTH,\n    validator: {\n      validate: (value, args) => isVariableWidth(value),\n      defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must contain a full-width and half-width characters', validationOptions)\n    }\n  }, validationOptions);\n} //# sourceMappingURL=IsVariableWidth.js.map","map":null,"metadata":{},"sourceType":"module"}