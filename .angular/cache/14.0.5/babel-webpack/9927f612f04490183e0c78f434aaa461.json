{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isJwtValidator from 'validator/lib/isJWT';\nexport const IS_JWT = 'isJwt';\n/**\n * Checks if the string is valid JWT token.\n * If given value is not a string, then it returns false.\n */\n\nexport function isJWT(value) {\n  return typeof value === 'string' && isJwtValidator(value);\n}\n/**\n * Checks if the string is valid JWT token.\n * If given value is not a string, then it returns false.\n */\n\nexport function IsJWT(validationOptions) {\n  return ValidateBy({\n    name: IS_JWT,\n    validator: {\n      validate: (value, args) => isJWT(value),\n      defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a jwt string', validationOptions)\n    }\n  }, validationOptions);\n} //# sourceMappingURL=IsJWT.js.map","map":null,"metadata":{},"sourceType":"module"}